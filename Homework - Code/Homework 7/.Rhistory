xlab = "Request Method",
col = rainbow(6),
ylim = range(0, 30,000),
legend = rownames(json_df$request.uri))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = range(0, 30,000),
legend = colnames(json_df$request.uri))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = range(0, 20000),
legend = colnames(json_df$request.uri))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = range(0, 30000),
legend = colnames(json_df$request.uri))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
legend = colnames(json_df$request.uri))
request_info
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(json_df$request.uri),
legend = colnames(json_df$request.uri))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(json_df$request.uri, na.rm=T),
legend = colnames(json_df$request.uri))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(json_df$request.uri),
legend = colnames(json_df$request.uri))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(json_df$request.method),
legend = colnames(json_df$request.uri))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = json_df$request.uri(6),
legend = colnames(json_df$request.uri))
barplot(cyl.gear,
main="Distribution of Cylinders by Gear",
xlab="Number of Gears",
ylab = "Number of Cylinders",
col=rainbow(3),
legend = rownames(cyl.gear),
beside=TRUE)
barplot(cyl.gear,
main="Distribution of Cylinders by Gear",
xlab="Number of Gears",
ylab = "Number of Cylinders",
col=rainbow(3),
legend = rownames(cyl.gear))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6, 200000),
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 200,000)
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 200000)
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 200000),
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 150000),
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 150000),
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 120000),
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 140000),
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 140000),
legend = rownames(request_info))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
request_info
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 140000),
legend = rownames(request_info))
pie(cross_tbl)
car.cyl <- table(mtcars$cyl)
car.cyl
pie(car.cyl)
lb1 <- paste(names(car.cyl), " cylinders\n", car.cyl, sep="")
lb1
pie(car.cyl,
labels = lb1,
main="Pie Chart of Cylinders\n (with count of cars)",
col=rainbow(length(lb1))
)
pie(car.cyl)
pie(request_info)
pie(request_info)
pie(car.cyl,
labels = lb1,
main="Pie Chart of Cylinders\n (with count of cars)",
col=rainbow(length(lb1))
pie(car.cyl,
labels = lb1,
main="Pie Chart of Cylinders\n (with count of cars)",
col=rainbow(length(lb1))
)
car.cyl <- table(mtcars$cyl)
car.cyl
pie(car.cyl)
lb1 <- paste(names(car.cyl), " cylinders\n", car.cyl, sep="")
lb1
pie(car.cyl,
labels = lb1,
main="Pie Chart of Cylinders\n (with count of cars)",
col=rainbow(length(lb1))
)
# Create Label to include on pie chart
pie1_lbl <- paste(names(request_info), " cylinders\n", car.cyl, sep="")
pie(request_info,
labels = pie1_lbl,
main = "Pie Chart with Visitor Count",
col = rainbow(length(pie1_lbl)))
# Create Label to include on pie chart
pie1_lbl <- paste(names(request_info), " cylinders\n", car.cyl, sep="")
pie(request_info,
labels = pie1_lbl,
main = "Pie Chart with Visitor Count",
col = rainbow(length(pie1_lbl)))
# Create Label to include on pie chart
pie1_lbl <- paste(names(request_info), " cylinders\n", request_info, sep="")
pie(request_info,
labels = pie1_lbl,
main = "Pie Chart with Visitor Count",
col = rainbow(length(pie1_lbl)))
# Create Label to include on pie chart
pie1_lbl <- paste(names(request_info), " Visitors\n", request_info, sep="")
pie(request_info,
labels = pie1_lbl,
main = "Pie Chart with URI Visitor Count",
col = rainbow(length(pie1_lbl)))
# Create Label to include on pie chart
pie1_lbl <- paste(names(request_info), " Visitors\n", request_info, sep="")
pie(request_info,
labels = pie1_lbl,
main = "Pie Chart with URI Visitor Count",
col = rainbow(length(pie1_lbl)),
legend = rownames(request_info)
# Create Label to include on pie chart
pie1_lbl <- paste(names(request_info), " Visitors\n", request_info, sep="")
pie(request_info,
labels = pie1_lbl,
main = "Pie Chart with URI Visitor Count",
col = rainbow(length(pie1_lbl)),
legend = rownames(request_info))
# Create Label to include on pie chart
pie1_lbl <- paste(names(request_info), " \n", request_info, sep="")
pie(request_info,
labels = pie1_lbl,
main = "Pie Chart with URI Visitor Count",
col = rainbow(length(pie1_lbl)),
# Create Label to include on pie chart
pie1_lbl <- paste(names(request_info), " \n", request_info, sep="")
pie(request_info,
labels = pie1_lbl,
main = "Pie Chart with URI Visitor Count",
col = rainbow(length(pie1_lbl)))
request_info
uri_request <- table(json_df$request.uri)
# Create Label to include on pie chart
pie1_lbl <- paste(names(uri_request), " \n", uri_request, sep="")
pie(uri_request,
labels = pie1_lbl,
main = "Pie Chart with URI Visitor Count",
col = rainbow(length(pie1_lbl)))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 140000),
legend = rownames(request_info))
# Create percent and label
pct <- round(request_info/sum(request_info)*100, digits = 1)
pie2_lbl <- paste(names(car.cyl), " cylinders\n", paste(pct,"%"), sep="")
# Create percent and label
pct <- round(request_info/sum(request_info)*100, digits = 1)
pie2_lbl <- paste(names(request_info), " \n", paste(pct,"%"), sep="")
# Create percent and label
pct <- round(uri_request/sum(uri_request)*100, digits = 1)
pie2_lbl <- paste(names(uri_request), " \n", paste(pct,"%"), sep="")
pie(uri_request,
labels = pie2_lbl,
main = "Pie Chart with URI Percentage of Visitors",
col = rainbow(length(uri_request)))
# Create response size table
response_size <- table(json_df$response.size)
response_size
rm(car.cyl. col, cyl.gear, lb1, response_size)
rm(car.cyl, col, cyl.gear, lb1, response_size)
?quantile
ordered_response <- json_df[order(json_df$response.size),]
View(ordered_response)
rm(ordered_response)
size_summary <- json_df[which(json_df$response.size),]
# Create df with the response size column going from smallest to largest
size_summary <- unlist(json_df[7,])
quantile(ordere)
size_summary
# Create df with the response size column going from smallest to largest
size_summary <- unlist(json_df[,7])
size_summary
# Create df with the response size column going from smallest to largest
size_summary <- unlist(json_df[,7])
size_summary <- order(size_summary)
size <- as.data.frame(size_summary)
View(size)
# Create df with the response size column going from smallest to largest
size_summary <- unlist(json_df[,7])
size_summary <- order(size_summary)
size <- as.data.frame(size_summary)
View(size)
rm(size)
head(size_summary)
# Create df with the response size column going from smallest to largest
size_summary <- unlist(order(json_df[,7]))
head(size_summary)
ordered_size_df <- json_df[order(json_df$response.size),]
head(ordered_size_df$response.size, 10)
# Create df with the response size column going from smallest to largest
ordered_size_df <- json_df[order(json_df$response.size),]
quantile(ordered_size_df$response.size, type = 7)
z1 <- c(23,12,24,55,60,34,20,17,19,37,43,51)
z1[order(z1)] # Sort data
quantile(z1,type = 7)  # Default type
quantile(z1,type = 2)
install.packages("mosaic")
library(mosaic)
fivenum(ordered_size_df$response.size)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
require(jsonlite)
require(dplyr)
setwd("D:/College Work/Junior Year/IST 3420/Homework - Code/Homework 7")
# Read in data
json_df <- stream_in(file("weblog_clean.jsonl"))
json_df <- json_df %>% mutate(request.datetime = as.POSIXct(request.datetime))
summary(json_df)
# Calculate frequency distribution of weekday and put it in column format ordered greatest to least
day_freq <- cbind(table(json_df$weekday))
day_freq <- cbind(day_freq[order(-day_freq),])
print(day_freq)
cross_tbl <- xtabs(~ request.uri + weekday, data=json_df)
print(cross_tbl)
# Create table
weekday_distribution <- table(json_df$weekday)
# Bar graph
barplot(weekday_distribution,
las = 2,
main="Distribution of Visits by Weekday",
col=rainbow(7))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 140000),
legend = rownames(request_info))
# Create Table
uri_request <- table(json_df$request.uri)
# Create Label to include on pie chart
pie1_lbl <- paste(names(uri_request), " \n", uri_request, sep="")
pie(uri_request,
labels = pie1_lbl,
main = "Pie Chart with URI Visitor Count",
col = rainbow(length(pie1_lbl)))
# Create percent and label
pct <- round(uri_request/sum(uri_request)*100, digits = 1)
pie2_lbl <- paste(names(uri_request), " \n", paste(pct,"%"), sep="")
pie(uri_request,
labels = pie2_lbl,
main = "Pie Chart with URI Percentage of Visitors",
col = rainbow(length(uri_request)))
# Create df with the response size column going from smallest to largest
ordered_size_df <- json_df[order(json_df$response.size),]
quantile(ordered_size_df$response.size, type = 7)
knitr::opts_chunk$set(echo = TRUE, message = F)
rm(list = ls())
require(jsonlite)
require(dplyr)
setwd("D:/College Work/Junior Year/IST 3420/Homework - Code/Homework 7")
# Read in data
json_df <- stream_in(file("weblog_clean.jsonl"))
json_df <- json_df %>% mutate(request.datetime = as.POSIXct(request.datetime))
summary(json_df)
# Calculate frequency distribution of weekday and put it in column format ordered greatest to least
day_freq <- cbind(table(json_df$weekday))
day_freq <- cbind(day_freq[order(-day_freq),])
print(day_freq)
cross_tbl <- xtabs(~ request.uri + weekday, data=json_df)
print(cross_tbl)
# Create table
weekday_distribution <- table(json_df$weekday)
# Bar graph
barplot(weekday_distribution,
las = 2,
main="Distribution of Visits by Weekday",
col=rainbow(7))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 140000),
legend = rownames(request_info))
# Create Table
uri_request <- table(json_df$request.uri)
# Create Label to include on pie chart
pie1_lbl <- paste(names(uri_request), " \n", uri_request, sep="")
pie(uri_request,
labels = pie1_lbl,
main = "Pie Chart with URI Visitor Count",
col = rainbow(length(pie1_lbl)))
# Create percent and label
pct <- round(uri_request/sum(uri_request)*100, digits = 1)
pie2_lbl <- paste(names(uri_request), " \n", paste(pct,"%"), sep="")
pie(uri_request,
labels = pie2_lbl,
main = "Pie Chart with URI Percentage of Visitors",
col = rainbow(length(uri_request)))
# Create df with the response size column going from smallest to largest
ordered_size_df <- json_df[order(json_df$response.size),]
quantile(ordered_size_df$response.size, type = 7)
knitr::opts_chunk$set(echo = TRUE, message = F)
rm(list = ls())
require(jsonlite)
require(dplyr)
setwd("D:/College Work/Junior Year/IST 3420/Homework - Code/Homework 7")
# Read in data
json_df <- stream_in(file("weblog_clean.jsonl"))
json_df <- json_df %>% mutate(request.datetime = as.POSIXct(request.datetime))
summary(json_df)
# Calculate frequency distribution of weekday and put it in column format ordered greatest to least
day_freq <- cbind(table(json_df$weekday))
day_freq <- cbind(day_freq[order(-day_freq),])
print(day_freq)
cross_tbl <- xtabs(~ request.uri + weekday, data=json_df)
print(cross_tbl)
# Create table
weekday_distribution <- table(json_df$weekday)
# Bar graph
barplot(weekday_distribution,
las = 2,
main="Distribution of Visits by Weekday",
col=rainbow(7))
# Create Table
request_info <- table(json_df$request.uri, json_df$request.method)
# Stacked Bar
barplot(request_info,
main="Distribution of Visits by request.uri and request method",
xlab = "Request Method",
col = rainbow(6),
ylim = c(0, 140000),
legend = rownames(request_info))
# Create Table
uri_request <- table(json_df$request.uri)
# Create Label to include on pie chart
pie1_lbl <- paste(names(uri_request), " \n", uri_request, sep="")
pie(uri_request,
labels = pie1_lbl,
main = "Pie Chart with URI Visitor Count",
col = rainbow(length(pie1_lbl)))
# Create percent and label
pct <- round(uri_request/sum(uri_request)*100, digits = 1)
pie2_lbl <- paste(names(uri_request), " \n", paste(pct,"%"), sep="")
pie(uri_request,
labels = pie2_lbl,
main = "Pie Chart with URI Percentage of Visitors",
col = rainbow(length(uri_request)))
# Create df with the response size column going from smallest to largest
ordered_size_df <- json_df[order(json_df$response.size),]
quantile(ordered_size_df$response.size, type = 7)
